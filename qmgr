#
# Create hooks and set their properties.
#
#
# Create and define hook cgroups
#
create hook cgroups
set hook cgroups type = site
set hook cgroups enabled = true
set hook cgroups event = exechost_periodic
set hook cgroups event += exechost_startup
set hook cgroups event += execjob_attach
set hook cgroups event += execjob_begin
set hook cgroups event += execjob_end
set hook cgroups event += execjob_epilogue
set hook cgroups event += execjob_launch
set hook cgroups event += execjob_resize
set hook cgroups event += execjob_abort
set hook cgroups event += execjob_postsuspend
set hook cgroups event += execjob_preresume
set hook cgroups user = pbsadmin
set hook cgroups alarm = 90
set hook cgroups freq = 120
set hook cgroups order = 2
set hook cgroups debug = false
# set hook cgroups fail_action = offline_vnodes
import hook cgroups application/x-python default /root/pbs.hooks/hook_cgroups.py
import hook cgroups application/x-config default /root/pbs.hooks/hook_cgroups.json

#
# Create and define hook scratch
#
create hook scratch
set hook scratch type = site
set hook scratch enabled = true
set hook scratch event = execjob_begin
set hook scratch event += execjob_end
set hook scratch event += exechost_periodic
set hook scratch event += queuejob
set hook scratch user = pbsadmin
set hook scratch alarm = 60
set hook scratch freq = 180
set hook scratch order = 10
set hook scratch debug = false
set hook scratch fail_action = none
import hook scratch application/x-python default /root/pbs.hooks/hook_scratch.py
import hook scratch application/x-config default /root/pbs.hooks/hook_scratch.json

#
# Create and define hook license
#
create hook license
set hook license type = site
set hook license enabled = true
set hook license event = runjob
set hook license event += execjob_begin
set hook license user = pbsadmin
set hook license alarm = 60
set hook license order = 20
set hook license debug = false
set hook license fail_action = none
import hook license application/x-python default /root/pbs.hooks/hook_license.py

#
# Create and define hook docker
#
create hook docker
set hook docker type = site
set hook docker enabled = false
set hook docker event = queuejob
set hook docker event += execjob_end
set hook docker event += execjob_launch
set hook docker user = pbsadmin
set hook docker alarm = 60
set hook docker order = 3
set hook docker debug = false
set hook docker fail_action = none
import hook docker application/x-python default /root/pbs.hooks/hook_docker.py

#
# Create and define hook external-hooks
#
create hook external-hooks
set hook external-hooks type = site
set hook external-hooks enabled = true
set hook external-hooks event = execjob_prologue
set hook external-hooks event += execjob_epilogue
set hook external-hooks event += execjob_end
set hook external-hooks user = pbsadmin
set hook external-hooks alarm = 300
set hook external-hooks order = 15
set hook external-hooks debug = false
set hook external-hooks fail_action = none
import hook external-hooks application/x-python default /root/pbs.hooks/hook_external-hooks.py

#
# Create and define hook job-enqueued
#
create hook job-enqueued
set hook job-enqueued type = site
set hook job-enqueued enabled = true
set hook job-enqueued event = queuejob
set hook job-enqueued user = pbsadmin
set hook job-enqueued alarm = 60
set hook job-enqueued order = 1
set hook job-enqueued debug = false
set hook job-enqueued fail_action = none
import hook job-enqueued application/x-python default /root/pbs.hooks/hook_job-enqueued.py

#
# Create and define hook env
#
create hook env
set hook env type = site
set hook env enabled = true
set hook env event = execjob_begin
set hook env user = pbsadmin
set hook env alarm = 60
set hook env order = 10
set hook env debug = false
set hook env fail_action = none
import hook env application/x-python default /root/pbs.hooks/hook_env.py

#
# Create and define hook health-check
#
create hook health-check
set hook health-check type = site
set hook health-check enabled = true
set hook health-check event = exechost_periodic
set hook health-check event += exechost_startup
set hook health-check user = pbsadmin
set hook health-check alarm = 90
set hook health-check freq = 300
set hook health-check order = 1
set hook health-check debug = false
set hook health-check fail_action = none
import hook health-check application/x-python default /root/pbs.hooks/hook_health-check.py
import hook health-check application/x-config default /root/pbs.hooks/hook_health-check.json

#
# Create and define hook res_discovery
#
create hook res_discovery
set hook res_discovery type = site
set hook res_discovery enabled = true
set hook res_discovery event = exechost_periodic
set hook res_discovery event += exechost_startup
set hook res_discovery user = pbsadmin
set hook res_discovery alarm = 30
set hook res_discovery freq = 3600
set hook res_discovery order = 5
set hook res_discovery debug = false
set hook res_discovery fail_action = none
import hook res_discovery application/x-python default /root/pbs.hooks/hook_res_discovery.py
import hook res_discovery application/x-config default /root/pbs.hooks/hook_res_discovery.json

#
# Create and define hook uvsize
#
create hook uvsize
set hook uvsize type = site
set hook uvsize enabled = true
set hook uvsize event = queuejob
set hook uvsize event += movejob
set hook uvsize user = pbsadmin
set hook uvsize alarm = 60
set hook uvsize order = 2
set hook uvsize debug = false
set hook uvsize fail_action = none
import hook uvsize application/x-python default /root/pbs.hooks/hook_uvsize.py

#
# Create and define hook uv_ncpus
#
create hook uv_ncpus
set hook uv_ncpus type = site
set hook uv_ncpus enabled = true
set hook uv_ncpus event = queuejob
set hook uv_ncpus event += movejob
set hook uv_ncpus user = pbsadmin
set hook uv_ncpus alarm = 60
set hook uv_ncpus order = 2
set hook uv_ncpus debug = false
set hook uv_ncpus fail_action = none
import hook uv_ncpus application/x-python default /root/pbs.hooks/hook_uv_ncpus.py

#
# Create and define hook fairshare
#
create hook fairshare
set hook fairshare type = site
set hook fairshare enabled = true
set hook fairshare event = periodic
set hook fairshare event += execjob_begin
set hook fairshare user = pbsadmin
set hook fairshare alarm = 90
set hook fairshare freq = 3600
set hook fairshare order = 1
set hook fairshare debug = false
set hook fairshare fail_action = none
import hook fairshare application/x-python default /root/pbs.hooks/hook_fairshare.py

#
# Create and define hook overcommit_detector
#
create hook overcommit_detector
set hook overcommit_detector type = site
set hook overcommit_detector enabled = true
set hook overcommit_detector event = runjob
set hook overcommit_detector user = pbsadmin
set hook overcommit_detector alarm = 30
set hook overcommit_detector order = 1
set hook overcommit_detector debug = false
set hook overcommit_detector fail_action = none
import hook overcommit_detector application/x-python default /root/pbs.hooks/hook_overcommit_detector.py

#
# Create and define hook node_owner
#
create hook node_owner
set hook node_owner type = site
set hook node_owner enabled = true
set hook node_owner event = queuejob
set hook node_owner user = pbsadmin
set hook node_owner alarm = 60
set hook node_owner order = 1
set hook node_owner debug = false
set hook node_owner fail_action = none
import hook node_owner application/x-python default /root/pbs.hooks/hook_node_owner.py
import hook node_owner application/x-config default /root/pbs.hooks/hook_node_owner.json

create hook meta-pbs_large_mem
set hook meta-pbs_large_mem type = site
set hook meta-pbs_large_mem enabled = true
set hook meta-pbs_large_mem event = queuejob
set hook meta-pbs_large_mem user = pbsadmin
set hook meta-pbs_large_mem alarm = 60
set hook meta-pbs_large_mem order = 1
set hook meta-pbs_large_mem debug = false
set hook meta-pbs_large_mem fail_action = none
import hook meta-pbs_large_mem application/x-python default /root/pbs.hooks/hook_meta-pbs_large_mem.py

#
# Create and define hook rapid
#
create hook rapid
set hook rapid type = site
set hook rapid enabled = true
set hook rapid event = queuejob
set hook rapid event += periodic
set hook rapid user = pbsadmin
set hook rapid alarm = 30
set hook rapid freq = 60
set hook rapid order = 1
set hook rapid debug = false
set hook rapid fail_action = none
import hook rapid application/x-python default /root/pbs.hooks/hook_rapid.py

#
# Create and define hook gpu8
#
create hook gpu8
set hook gpu8 type = site
set hook gpu8 enabled = true
set hook gpu8 event = queuejob
set hook gpu8 user = pbsadmin
set hook gpu8 alarm = 60
set hook gpu8 order = 1
set hook gpu8 debug = false
set hook gpu8 fail_action = none
import hook gpu8 application/x-python default /root/pbs.hooks/hook_gpu8.py
